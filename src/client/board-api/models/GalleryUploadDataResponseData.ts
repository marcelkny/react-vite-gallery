/* tslint:disable */
/* eslint-disable */
/**
 * MKSERVERMASTER API (frontend)
 * Internal API for MK-Servermaster Board.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ContentLevelItem } from './ContentLevelItem';
import {
    ContentLevelItemFromJSON,
    ContentLevelItemFromJSONTyped,
    ContentLevelItemToJSON,
} from './ContentLevelItem';
import type { KeyData } from './KeyData';
import {
    KeyDataFromJSON,
    KeyDataFromJSONTyped,
    KeyDataToJSON,
} from './KeyData';

/**
 * 
 * @export
 * @interface GalleryUploadDataResponseData
 */
export interface GalleryUploadDataResponseData {
    /**
     * 
     * @type {Array<ContentLevelItem>}
     * @memberof GalleryUploadDataResponseData
     */
    contentLevels: Array<ContentLevelItem>;
    /**
     * 
     * @type {KeyData}
     * @memberof GalleryUploadDataResponseData
     */
    keyData: KeyData;
}

/**
 * Check if a given object implements the GalleryUploadDataResponseData interface.
 */
export function instanceOfGalleryUploadDataResponseData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "contentLevels" in value;
    isInstance = isInstance && "keyData" in value;

    return isInstance;
}

export function GalleryUploadDataResponseDataFromJSON(json: any): GalleryUploadDataResponseData {
    return GalleryUploadDataResponseDataFromJSONTyped(json, false);
}

export function GalleryUploadDataResponseDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): GalleryUploadDataResponseData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'contentLevels': ((json['contentLevels'] as Array<any>).map(ContentLevelItemFromJSON)),
        'keyData': KeyDataFromJSON(json['keyData']),
    };
}

export function GalleryUploadDataResponseDataToJSON(value?: GalleryUploadDataResponseData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'contentLevels': ((value.contentLevels as Array<any>).map(ContentLevelItemToJSON)),
        'keyData': KeyDataToJSON(value.keyData),
    };
}

