/* tslint:disable */
/* eslint-disable */
/**
 * MKSERVERMASTER API (frontend)
 * Internal API for MK-Servermaster Board.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AccountUpdateCredentials
 */
export interface AccountUpdateCredentials {
    /**
     * 
     * @type {string}
     * @memberof AccountUpdateCredentials
     */
    userName: string;
    /**
     * 
     * @type {string}
     * @memberof AccountUpdateCredentials
     */
    emailAddress: string;
    /**
     * 
     * @type {string}
     * @memberof AccountUpdateCredentials
     */
    config: string;
    /**
     * 
     * @type {string}
     * @memberof AccountUpdateCredentials
     */
    password: string;
}

/**
 * Check if a given object implements the AccountUpdateCredentials interface.
 */
export function instanceOfAccountUpdateCredentials(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "userName" in value;
    isInstance = isInstance && "emailAddress" in value;
    isInstance = isInstance && "config" in value;
    isInstance = isInstance && "password" in value;

    return isInstance;
}

export function AccountUpdateCredentialsFromJSON(json: any): AccountUpdateCredentials {
    return AccountUpdateCredentialsFromJSONTyped(json, false);
}

export function AccountUpdateCredentialsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountUpdateCredentials {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'userName': json['userName'],
        'emailAddress': json['emailAddress'],
        'config': json['config'],
        'password': json['password'],
    };
}

export function AccountUpdateCredentialsToJSON(value?: AccountUpdateCredentials | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'userName': value.userName,
        'emailAddress': value.emailAddress,
        'config': value.config,
        'password': value.password,
    };
}

