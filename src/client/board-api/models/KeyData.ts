/* tslint:disable */
/* eslint-disable */
/**
 * MKSERVERMASTER API (frontend)
 * Internal API for MK-Servermaster Board.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GalleryKeyword } from './GalleryKeyword';
import {
    GalleryKeywordFromJSON,
    GalleryKeywordFromJSONTyped,
    GalleryKeywordToJSON,
} from './GalleryKeyword';

/**
 * 
 * @export
 * @interface KeyData
 */
export interface KeyData {
    /**
     * 
     * @type {{ [key: string]: GalleryKeyword; }}
     * @memberof KeyData
     */
    dict: { [key: string]: GalleryKeyword; };
    /**
     * 
     * @type {Array<GalleryKeyword>}
     * @memberof KeyData
     */
    arr: Array<GalleryKeyword>;
}

/**
 * Check if a given object implements the KeyData interface.
 */
export function instanceOfKeyData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "dict" in value;
    isInstance = isInstance && "arr" in value;

    return isInstance;
}

export function KeyDataFromJSON(json: any): KeyData {
    return KeyDataFromJSONTyped(json, false);
}

export function KeyDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): KeyData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dict': (mapValues(json['dict'], GalleryKeywordFromJSON)),
        'arr': ((json['arr'] as Array<any>).map(GalleryKeywordFromJSON)),
    };
}

export function KeyDataToJSON(value?: KeyData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'dict': (mapValues(value.dict, GalleryKeywordToJSON)),
        'arr': ((value.arr as Array<any>).map(GalleryKeywordToJSON)),
    };
}

