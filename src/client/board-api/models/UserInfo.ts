/* tslint:disable */
/* eslint-disable */
/**
 * MKSERVERMASTER API (frontend)
 * Internal API for MK-Servermaster Board.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserInfo
 */
export interface UserInfo {
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    user_id: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    mail: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    config: string;
    /**
     * 
     * @type {number}
     * @memberof UserInfo
     */
    userContentLevel: number;
    /**
     * 
     * @type {number}
     * @memberof UserInfo
     */
    maxContentLevel: number;
}

/**
 * Check if a given object implements the UserInfo interface.
 */
export function instanceOfUserInfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "user_id" in value;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "mail" in value;
    isInstance = isInstance && "config" in value;
    isInstance = isInstance && "userContentLevel" in value;
    isInstance = isInstance && "maxContentLevel" in value;

    return isInstance;
}

export function UserInfoFromJSON(json: any): UserInfo {
    return UserInfoFromJSONTyped(json, false);
}

export function UserInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'user_id': json['user_id'],
        'username': json['username'],
        'mail': json['mail'],
        'config': json['config'],
        'userContentLevel': json['userContentLevel'],
        'maxContentLevel': json['maxContentLevel'],
    };
}

export function UserInfoToJSON(value?: UserInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'user_id': value.user_id,
        'username': value.username,
        'mail': value.mail,
        'config': value.config,
        'userContentLevel': value.userContentLevel,
        'maxContentLevel': value.maxContentLevel,
    };
}

