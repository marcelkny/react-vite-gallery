/* tslint:disable */
/* eslint-disable */
/**
 * MKSERVERMASTER API (frontend)
 * Internal API for MK-Servermaster Board.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TokenInfo
 */
export interface TokenInfo {
    /**
     * 
     * @type {string}
     * @memberof TokenInfo
     */
    token: string;
    /**
     * 
     * @type {string}
     * @memberof TokenInfo
     */
    expiration: string;
    /**
     * 
     * @type {string}
     * @memberof TokenInfo
     */
    timestamp: string;
    /**
     * 
     * @type {string}
     * @memberof TokenInfo
     */
    jwt: string;
}

/**
 * Check if a given object implements the TokenInfo interface.
 */
export function instanceOfTokenInfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "token" in value;
    isInstance = isInstance && "expiration" in value;
    isInstance = isInstance && "timestamp" in value;
    isInstance = isInstance && "jwt" in value;

    return isInstance;
}

export function TokenInfoFromJSON(json: any): TokenInfo {
    return TokenInfoFromJSONTyped(json, false);
}

export function TokenInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'token': json['token'],
        'expiration': json['expiration'],
        'timestamp': json['timestamp'],
        'jwt': json['jwt'],
    };
}

export function TokenInfoToJSON(value?: TokenInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'token': value.token,
        'expiration': value.expiration,
        'timestamp': value.timestamp,
        'jwt': value.jwt,
    };
}

