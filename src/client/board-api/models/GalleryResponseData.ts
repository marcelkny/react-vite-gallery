/* tslint:disable */
/* eslint-disable */
/**
 * MKSERVERMASTER API (frontend)
 * Internal API for MK-Servermaster Board.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GalleryImage } from './GalleryImage';
import {
    GalleryImageFromJSON,
    GalleryImageFromJSONTyped,
    GalleryImageToJSON,
} from './GalleryImage';
import type { KeyData } from './KeyData';
import {
    KeyDataFromJSON,
    KeyDataFromJSONTyped,
    KeyDataToJSON,
} from './KeyData';

/**
 * 
 * @export
 * @interface GalleryResponseData
 */
export interface GalleryResponseData {
    /**
     * 
     * @type {{ [key: string]: Array<GalleryImage>; }}
     * @memberof GalleryResponseData
     */
    images?: { [key: string]: Array<GalleryImage>; };
    /**
     * 
     * @type {KeyData}
     * @memberof GalleryResponseData
     */
    keyData?: KeyData;
}

/**
 * Check if a given object implements the GalleryResponseData interface.
 */
export function instanceOfGalleryResponseData(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GalleryResponseDataFromJSON(json: any): GalleryResponseData {
    return GalleryResponseDataFromJSONTyped(json, false);
}

export function GalleryResponseDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): GalleryResponseData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'images': !exists(json, 'images') ? undefined : json['images'],
        'keyData': !exists(json, 'keyData') ? undefined : KeyDataFromJSON(json['keyData']),
    };
}

export function GalleryResponseDataToJSON(value?: GalleryResponseData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'images': value.images,
        'keyData': KeyDataToJSON(value.keyData),
    };
}

